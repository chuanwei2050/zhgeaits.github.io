---
layout: post
title:  "Android开发时候的CheckList!"
date:   2015-04-17 10:06:03
categories: android
type: android
---

虽然开发得越多，代码量越多，经验越丰富，但是随着年龄得增长，思维即使是变得越来越强，记忆力总会退化的，好记性不如烂笔头嘛，就算是经验，有时候也会忘记的，当然，如果能够训练成下意识肯定是最好的，但是，人总不是机器，也不想那么机械，所以记录一个Checklist是很有必要的，在开发完后，对照来检查一下。就像过测试用例一样。

曾经，我的老师，段王爷，说过，小日本人写代码，超过一半都是异常的判断，可见他们思考问题是多么的周到，那样写出来的代码健壮性也非常的好。受到以前学习java，学习web，学习面向对象开发模式的影响，我一直是专注于业务，什么exception都不管，反正都会被catch到，那时候再去处理吧，没关系的，大家专注于写自己的业务逻辑就好了。but，不也是发现写业务逻辑就在不断重复增删改查的，不是很无聊么？

后来，工作大半年了，也从老大那里学到不少东西，虽然测试很重要，但是自己写代码也必须考虑周全，那么的代码质量才会更好。不然，依然只是一个码农，提升不了，能力的提升，处理智力外，也包含经验，考虑问题的周全性，解决问题的能力等等。

这里是关于android的checklist，每次写完代码，最好来这里对照检查一下。android虽然用java来写，但是毕竟是手机，不是服务器，性能远远不足，最好不要用try太多exception，效率太低了，所以，我觉得最好还是像c那样写代码比较，虽然有点违背了java，但是确是训练的好地方。

其实，对于测试来讲，就是他们经常考虑的分支测试用例，而开发呢，就是状态机的转换，我们应该考虑各种状态，各个状态之间的转换，会发生什么？你的代码考虑到了吗？

1.当你要点一个方法或者属性的时候，记住要想想，会不会null呢？万恶的NullPointerException老是崩溃。

2.写完代码以后，用不保留活动来测试一下，这就像用户使用手机助手来释放内存一样的效果，android的界面UI，如activity都会被回收，所以状态变量的不要存在UI了。

3.各个组件的生命周期考虑到了吗？按下home键以后，你的程序会怎么处理呢？状态保存了吗？恢复的时候，状态恢复了吗？

4.可恶的handler，会在后台去修改ui，但是你的ui被释放了，或者被回收了，你处理你的handler了吗？

5.写文件，写数据库的时候，需要考虑有一些手机是无法写的情况哦。

6.别忘了写注释，不然时间久了自己都忘记为什么要这样写了。

7.要多点打日志，在关键的地方，但是不要打太多，否则影响性能。

8.如果需要用到网络的逻辑，有没有先判断网络是否可用？

  